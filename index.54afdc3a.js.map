{"mappings":"ACGA,IAAM,EAAa,SAAS,aAAa,CAAC,iBACpC,EAAS,SAAS,gBAAgB,CAAC,iBACnC,EAAU,SAAS,aAAa,CAAC,yBACjC,EAAU,SAAS,aAAa,CAAC,yBAEnC,EAAe,EAEnB,SAAS,IACP,EAAW,KAAK,CAAC,SAAS,CAAG,eAAkC,MAAA,CAAnB,AAAe,IAAf,EAAmB,KACjE,CAEA,EAAQ,gBAAgB,CAAC,QAAS,WAChC,EAAe,EAAe,EAAI,EAAe,EAAI,EAAO,MAAM,CAAG,EACrE,GACF,GAEA,EAAQ,gBAAgB,CAAC,QAAS,WAChC,EAAe,EAAe,EAAO,MAAM,CAAG,EAAI,EAAe,EAAI,EACrE,GACF,GAKA,AAFgB,SAAS,cAAc,CAAC,gBAEhC,gBAAgB,CAAC,QAAS,WAChC,OAAO,QAAQ,CAAC,IAAI,CAAG,EACzB,GAaA,IAAM,EAAW,IAAI,qBATrB,SAAiB,CAAK,EACpB,EAAM,OAAO,CAAC,SAAA,CAAd,EACM,EAAO,cAAc,EACvB,EAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,WAEhC,EACF,EAEgB,CAAE,UAAW,CAAC,GAAI,AAAC,GAE7B,EAAW,SAAS,gBAAgB,CAAC,aAEtC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAS,OAAO,CAAC,E,C,C,M,E,CADd,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// slider\nvar slidesList = document.querySelector(\".slider__list\");\nvar slides = document.querySelectorAll(\".slider__item\");\nvar prevBtn = document.querySelector(\".slider__button--prev\");\nvar nextBtn = document.querySelector(\".slider__button--next\");\nvar currentSlide = 0;\nfunction updateSliderPosition() {\n    slidesList.style.transform = \"translateX(-\".concat(currentSlide * 100, \"%)\");\n}\nprevBtn.addEventListener(\"click\", function() {\n    currentSlide = currentSlide > 0 ? currentSlide - 1 : slides.length - 1;\n    updateSliderPosition();\n});\nnextBtn.addEventListener(\"click\", function() {\n    currentSlide = currentSlide < slides.length - 1 ? currentSlide + 1 : 0;\n    updateSliderPosition();\n});\n// menu-overlay\nvar overlay = document.getElementById(\"menu-overlay\");\noverlay.addEventListener(\"click\", function() {\n    window.location.hash = \"\";\n});\n// animations\nfunction onEntry(entry) {\n    entry.forEach(function(change) {\n        if (change.isIntersecting) change.target.classList.add(\"elm-show\");\n    });\n}\nvar options = {\n    threshold: [\n        0.3\n    ]\n};\nvar observer = new IntersectionObserver(onEntry, options);\nvar elements = document.querySelectorAll(\".elm-anim\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var elm = _step.value;\n        observer.observe(elm);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.54afdc3a.js.map\n","'use strict';\n\n// slider\nconst slidesList = document.querySelector('.slider__list');\nconst slides = document.querySelectorAll('.slider__item');\nconst prevBtn = document.querySelector('.slider__button--prev');\nconst nextBtn = document.querySelector('.slider__button--next');\n\nlet currentSlide = 0;\n\nfunction updateSliderPosition() {\n  slidesList.style.transform = `translateX(-${currentSlide * 100}%)`;\n}\n\nprevBtn.addEventListener('click', () => {\n  currentSlide = currentSlide > 0 ? currentSlide - 1 : slides.length - 1;\n  updateSliderPosition();\n});\n\nnextBtn.addEventListener('click', () => {\n  currentSlide = currentSlide < slides.length - 1 ? currentSlide + 1 : 0;\n  updateSliderPosition();\n});\n\n// menu-overlay\nconst overlay = document.getElementById('menu-overlay');\n\noverlay.addEventListener('click', () => {\n  window.location.hash = '';\n});\n\n// animations\n\nfunction onEntry(entry) {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('elm-show');\n    }\n  });\n}\n\nconst options = { threshold: [0.3] };\nconst observer = new IntersectionObserver(onEntry, options);\nconst elements = document.querySelectorAll('.elm-anim');\n\nfor (const elm of elements) {\n  observer.observe(elm);\n}\n"],"names":["slidesList","document","querySelector","slides","querySelectorAll","prevBtn","nextBtn","currentSlide","updateSliderPosition","style","transform","concat","addEventListener","length","overlay","getElementById","window","location","hash","observer","IntersectionObserver","entry","forEach","change","isIntersecting","target","classList","add","threshold","elements","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","elm","value","observe","err","return"],"version":3,"file":"index.54afdc3a.js.map"}